{
    "project": {
        "name": "Abstract",
        "description": "Abstract JavaScript Object generation.",
        "version": "0.0.1",
        "url": "https://github.com/UsabilityDynamics/abstract/",
        "logo": "http://a3d72a45d111006ec192-ec5b80a12b0b09b4d52373336afb4254.r80.cf1.rackcdn.com/usability-dynamics.png"
    },
    "files": {
        "lib/abstract.js": {
            "name": "lib/abstract.js",
            "modules": {
                "abstract": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/other.js": {
            "name": "lib/other.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/polyfills.js": {
            "name": "lib/polyfills.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/utility.js": {
            "name": "lib/utility.js",
            "modules": {
                "abstract-utility": 1
            },
            "classes": {},
            "fors": {
                "abstract": 1,
                "Json": 1,
                "Utility": 1,
                "abstract-utility": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "abstract": {
            "name": "abstract",
            "submodules": {
                "abstract-utility": 1
            },
            "classes": {
                "abstract": 1,
                "Json": 1,
                "Utility": 1,
                "abstract-utility": 1
            },
            "fors": {
                "abstract": 1,
                "Json": 1,
                "Utility": 1,
                "abstract-utility": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "lib/abstract.js",
            "line": 1,
            "description": "Create custom objects and methods by aggregating and abstracting esources.",
            "version": "0.0.1",
            "constractor": ""
        },
        "abstract-utility": {
            "name": "abstract-utility",
            "submodules": {},
            "classes": {
                "abstract": 1,
                "Json": 1,
                "Utility": 1,
                "abstract-utility": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "abstract",
            "namespace": "",
            "file": "lib/utility.js",
            "line": 1,
            "description": "Helper Utility for Abstract",
            "example": [
                "\n\n   // Select specific methods to load\n   var my_tools = Abstract.utility( 'if', 'extend', 'flatten', 'unwatch', 'watch' );"
            ],
            "author": "potanin@UD",
            "date": "6/17/13"
        }
    },
    "classes": {
        "abstract": {
            "name": "abstract",
            "shortname": "abstract",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "abstract",
            "namespace": "",
            "submodule": "abstract-utility"
        },
        "Json": {
            "name": "Json",
            "shortname": "Json",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "abstract",
            "submodule": "abstract-utility",
            "namespace": ""
        },
        "Utility": {
            "name": "Utility",
            "shortname": "Utility",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "abstract",
            "submodule": "abstract-utility",
            "namespace": ""
        },
        "abstract-utility": {
            "name": "abstract-utility",
            "shortname": "abstract-utility",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "abstract",
            "submodule": "abstract-utility",
            "namespace": ""
        }
    },
    "classitems": [
        {
            "file": "lib/abstract.js",
            "line": 25,
            "description": "Constructor Properties\n\nThe following properties are available within the constructor factory or by\nreferencing the constructor.",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 34,
            "description": "Get a key from current context's _meta",
            "todo": [
                "Migrate to use object-settings once Abstract core is ready."
            ],
            "temp": "",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 51,
            "description": "Set a key and value to current's context's _meta",
            "todo": [
                "Migrate to use object-settings once Abstract core is ready."
            ],
            "temp": "",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 69,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 82,
            "description": "Instantiate within a custom context.",
            "params": [
                {
                    "name": "target",
                    "description": "Target object to use as the context.",
                    "type": "Object"
                },
                {
                    "name": "arguments",
                    "description": "Arguments to instantiate with.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 98,
            "description": "Creates a new object with the specified prototype object and properties.\nCopy the functions from the superclass prototype to the subclass prototype.",
            "params": [
                {
                    "name": "proto",
                    "description": "Superclass to use as prototype for new object.",
                    "type": "Object|null"
                }
            ],
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 124,
            "description": "Create Model Environment\n\nThis method expects a function to be passed to be used as the Model Builder.\nWithin the context of the Model Builder new methods become available.\n\nRemoved for now:\nAbstract.copyProperties( Model.create, Model );\nAbstract.addPrototype( Model.create, Model );",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 207,
            "description": "Iterate through target's properties and reference them into the source object",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Target object.",
                "type": "Object"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 238,
            "description": "Create Instance\n\nIt's rather imperative that this method be run in context.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 291,
            "description": "Bind createInstance to Context",
            "itemtype": "method",
            "name": "defineConstructor",
            "params": [
                {
                    "name": "target",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 324,
            "description": "Bind createInstance to Context",
            "itemtype": "method",
            "name": "defineInstance",
            "params": [
                {
                    "name": "target",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 357,
            "description": "Configure multiple object properties.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "props",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 386,
            "description": "Configure single object property.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "prop",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 492,
            "description": "Allow Prototype useage method to be ran in custom context for static calls",
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 506,
            "description": "Allow Prototype useage method to be ran in custom context for static calls",
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 543,
            "description": "Cross Browser Compatible prototype getter.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 564,
            "description": "Basic Wrapper - will be more fault-tolerant in future.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "proto",
                    "description": ""
                }
            ],
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 596,
            "description": "Instance Properties\n\nThe follow properties are available to each instance created from a constructor.\nSome of the Abstract Static methods reference the prototypal methods.\nPrototyal methods all work with the existing context.",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 606,
            "description": "Get a key from current context's _meta",
            "todo": [
                "Migrate to use object-settings once Abstract core is ready."
            ],
            "temp": "",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 623,
            "description": "Set a key and value to current's context's _meta",
            "todo": [
                "Migrate to use object-settings once Abstract core is ready."
            ],
            "temp": "",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 641,
            "description": "Inserts an object/prototype into a target object.",
            "todo": [
                "Try using in some instances.\nrequire( 'util' ).inherits( this",
                "source );"
            ],
            "params": [
                {
                    "name": "target",
                    "description": ""
                },
                {
                    "name": "proto",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 684,
            "description": "Mixin current prototype into target object\n\nHonors property descriptor settings, if available.",
            "params": [
                {
                    "name": "target",
                    "description": ""
                },
                {
                    "name": "source",
                    "description": ""
                }
            ],
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 698,
            "description": "Requires and inserts an object/prototype into this context object.",
            "example": [
                "\n\n   require( 'abstract' ).createModel( function MyAbstraction( model ) {\n\n     this.require( 'util' );\n     this.require( 'async' );\n\n     this.auto({}); // -> [Function]\n\n   });"
            ],
            "todo": [
                "Try using in some instances.\n   require( 'util' ).inherits( this",
                "source );"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "Module name or file path to require.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 763,
            "description": "Get / Set Properties",
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/other.js",
            "line": 1,
            "description": "-\n\n-",
            "author": "potanin",
            "date": "7/6/13",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/other.js",
            "line": 11,
            "description": "Instantiate Children.",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/other.js",
            "line": 61,
            "description": "Start Context in another Worker",
            "experimental": "",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/other.js",
            "line": 72,
            "description": "Generate Standalone JavaScript for browser integration\n\nThe result is not cached and is expected that the rendering engine does the caching.",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/other.js",
            "line": 92,
            "description": "Allow Prototype useage method to be ran in custom context for static calls",
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/polyfills.js",
            "line": 1,
            "description": "-\n\n-",
            "author": "potanin",
            "date": "7/5/13",
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/polyfills.js",
            "line": 10,
            "description": "Add Object.setPrototypeOf()",
            "source": ": https://gist.github.com/WebReflection/5593554#file-object-setprototypeof-js",
            "params": [
                {
                    "name": "Object",
                    "description": ""
                },
                {
                    "name": "magic",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "abstract",
            "module": "abstract"
        },
        {
            "file": "lib/utility.js",
            "line": 21,
            "description": "Safely parse JSON",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "json",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Parsed|json"
            },
            "class": "Json",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 51,
            "description": "Prety Print complex objects",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "depth",
                    "description": ""
                }
            ],
            "requires": [
                "lodash"
            ],
            "itemtype": "method",
            "name": "console_json",
            "return": {
                "description": "The first argument.",
                "type": "Object"
            },
            "class": "Json",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 80,
            "description": "Pretty Print and Object's Methods",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "object",
                    "description": ""
                }
            ],
            "requires": [
                "lodash"
            ],
            "itemtype": "method",
            "name": "console_methods",
            "return": {
                "description": "The first argument.",
                "type": "Object"
            },
            "class": "Json",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 106,
            "description": "Get all Object Keys",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "console_keys",
            "return": {
                "description": "The first argument.",
                "type": "Object"
            },
            "class": "Json",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 127,
            "description": "Draw data in table style",
            "example": [
                "\n\n   //console.table\n   console.table([\n     { .. row .. }\n   ]);\n\n   //console.table\n   console.table({\n     'head': [ 'I/O ID', 'Endpoint', 'Description' ],\n     'colWidths': [ 30, 50, 50 ],\n     'rows': [\n       [ 'one', 'two', 'three' ],\n       [ 'one', 'two', 'three' ]\n     ]\n   });"
            ],
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "table",
            "class": "Utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 186,
            "description": "Console a variable report",
            "itemtype": "method",
            "name": "report",
            "params": [
                {
                    "name": "arguments",
                    "description": "",
                    "type": "Object",
                    "multiple": true
                }
            ],
            "class": "Utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 203,
            "description": "Not a function, that's for sure.\nThis method does not accept any arguments.",
            "class": "Utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 215,
            "description": "Creates a continuation function with some arguments already applied.",
            "uses": [
                "async"
            ],
            "class": "Utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 226,
            "description": "Configure Defaults for an Object",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 250,
            "description": "Watch a Single Property",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Callback"
                }
            ],
            "itemtype": "method",
            "name": "watch",
            "chainable": 1,
            "return": {
                "description": "newval",
                "type": "Object"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 304,
            "description": "Unwatch a Single Property",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "unwatch",
            "return": {
                "description": "null"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 333,
            "description": "Get property value using a dot notation path.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "str",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 365,
            "description": "Unwrap dot notation string to nested Object",
            "example": [
                "\n\n   Utility.unwrap( 'first_name', 'john' );  // -> { first_name: 'John' }\n   Utility.unwrap( 'name.first', 'john' );  // -> { name: { first: 'John' } }\n   Utility.unwrap( 'first_name' );          // -> null\n   Utility.unwrap( 'name.first' );          // -> null\n\n   // Will not modify object if already exists\n   Utility.unwrap( 'name.first.fail', 'Anything' );"
            ],
            "params": [
                {
                    "name": "string",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "hash",
                    "description": ""
                },
                {
                    "name": "seperator",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 412,
            "description": "Mixin current prototype into target object\n\nHonors property descriptor settings, if available.",
            "params": [
                {
                    "name": "source",
                    "description": ""
                },
                {
                    "name": "target",
                    "description": ""
                }
            ],
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 445,
            "description": "Carefully Inherit Properties",
            "params": [
                {
                    "name": "target",
                    "description": "Object to add properties to.",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "Source object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Extended target.",
                "type": "Object"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 468,
            "description": "Flatten Array",
            "todo": [
                "Notice - nested arrays will not honor delimiter."
            ],
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 515,
            "description": "Inherit the prototype methods from one constructor into another.\n\nCopy of the Node.js util.inherits method.",
            "params": [
                {
                    "name": "target",
                    "description": "Constructor function which needs to inherit the prototype.",
                    "type": "Function"
                },
                {
                    "name": "constructor",
                    "description": "Constructor function to inherit prototype from.",
                    "type": "Function"
                }
            ],
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 542,
            "description": "Walk up the prototype chain, creating a JSON-Schema-esque structure",
            "params": [
                {
                    "name": "context",
                    "description": "The object to walk through.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "JSON Schema-esque constructor chain.",
                "type": "Object"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 598,
            "description": "Return unique values of an array",
            "params": [
                {
                    "name": "array",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 616,
            "description": "Generate a unique hash for an Object, using md5 on default.",
            "example": [
                "\n\n   var _hash = Utility.hash({ type: 'some_object', name: 'Bob'});\n\n   console.log( _hash ); // -> 147ce3e2ccb7db6b928b303ce42bdafa"
            ],
            "params": [
                {
                    "name": "obj",
                    "description": "Object to generate a hash for.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "options for hash generation.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "options.type Type of hash to generate, defaulting to md5.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "options.silent_fail Do not throw errors, return empty string if there was an error when true.",
                    "type": "String"
                }
            ],
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        },
        {
            "file": "lib/utility.js",
            "line": 678,
            "description": "Output variables to console log.\n\nSettings can be configured like so:\n   abstract.log.config.depth = 2;\n   abstract.log.config.colors = true;",
            "params": [
                {
                    "name": "data",
                    "description": "A config object",
                    "type": "Object|String"
                }
            ],
            "example": [
                "\n     Abstract.log( data )\n\nmethod log"
            ],
            "return": {
                "description": "Abstract constructor.",
                "type": "Object"
            },
            "chainable": 1,
            "class": "abstract-utility",
            "module": "abstract",
            "submodule": "abstract-utility"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " lib/abstract.js:1"
        },
        {
            "message": "unknown tag: constractor",
            "line": " lib/abstract.js:1"
        },
        {
            "message": "unknown tag: temp",
            "line": " lib/abstract.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:34"
        },
        {
            "message": "unknown tag: temp",
            "line": " lib/abstract.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:69"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " lib/abstract.js:82"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " lib/abstract.js:82"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:82"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:207"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:357"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:386"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:492"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:506"
        },
        {
            "message": "unknown tag: temp",
            "line": " lib/abstract.js:606"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:606"
        },
        {
            "message": "unknown tag: temp",
            "line": " lib/abstract.js:623"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:623"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:641"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:698"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:763"
        },
        {
            "message": "unknown tag: date",
            "line": " lib/other.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/other.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/other.js:92"
        },
        {
            "message": "unknown tag: date",
            "line": " lib/polyfills.js:1"
        },
        {
            "message": "unknown tag: source",
            "line": " lib/polyfills.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/polyfills.js:10"
        },
        {
            "message": "unknown tag: date",
            "line": " lib/utility.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:226"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:333"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:445"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:598"
        },
        {
            "message": "Missing item type\nConstructor Properties\n\nThe following properties are available within the constructor factory or by\nreferencing the constructor.",
            "line": " lib/abstract.js:25"
        },
        {
            "message": "Missing item type\nGet a key from current context's _meta",
            "line": " lib/abstract.js:34"
        },
        {
            "message": "Missing item type\nSet a key and value to current's context's _meta",
            "line": " lib/abstract.js:51"
        },
        {
            "message": "Missing item type",
            "line": " lib/abstract.js:69"
        },
        {
            "message": "Missing item type\nInstantiate within a custom context.",
            "line": " lib/abstract.js:82"
        },
        {
            "message": "Missing item type\nCreates a new object with the specified prototype object and properties.\nCopy the functions from the superclass prototype to the subclass prototype.",
            "line": " lib/abstract.js:98"
        },
        {
            "message": "Missing item type\nCreate Model Environment\n\nThis method expects a function to be passed to be used as the Model Builder.\nWithin the context of the Model Builder new methods become available.\n\nRemoved for now:\nAbstract.copyProperties( Model.create, Model );\nAbstract.addPrototype( Model.create, Model );",
            "line": " lib/abstract.js:124"
        },
        {
            "message": "Missing item type\nIterate through target's properties and reference them into the source object",
            "line": " lib/abstract.js:207"
        },
        {
            "message": "Missing item type\nCreate Instance\n\nIt's rather imperative that this method be run in context.",
            "line": " lib/abstract.js:238"
        },
        {
            "message": "Missing item type\nConfigure multiple object properties.",
            "line": " lib/abstract.js:357"
        },
        {
            "message": "Missing item type\nConfigure single object property.",
            "line": " lib/abstract.js:386"
        },
        {
            "message": "Missing item type\nAllow Prototype useage method to be ran in custom context for static calls",
            "line": " lib/abstract.js:492"
        },
        {
            "message": "Missing item type\nAllow Prototype useage method to be ran in custom context for static calls",
            "line": " lib/abstract.js:506"
        },
        {
            "message": "Missing item type\nCross Browser Compatible prototype getter.",
            "line": " lib/abstract.js:543"
        },
        {
            "message": "Missing item type\nBasic Wrapper - will be more fault-tolerant in future.",
            "line": " lib/abstract.js:564"
        },
        {
            "message": "Missing item type\nInstance Properties\n\nThe follow properties are available to each instance created from a constructor.\nSome of the Abstract Static methods reference the prototypal methods.\nPrototyal methods all work with the existing context.",
            "line": " lib/abstract.js:596"
        },
        {
            "message": "Missing item type\nGet a key from current context's _meta",
            "line": " lib/abstract.js:606"
        },
        {
            "message": "Missing item type\nSet a key and value to current's context's _meta",
            "line": " lib/abstract.js:623"
        },
        {
            "message": "Missing item type\nInserts an object/prototype into a target object.",
            "line": " lib/abstract.js:641"
        },
        {
            "message": "Missing item type\nMixin current prototype into target object\n\nHonors property descriptor settings, if available.",
            "line": " lib/abstract.js:684"
        },
        {
            "message": "Missing item type\nRequires and inserts an object/prototype into this context object.",
            "line": " lib/abstract.js:698"
        },
        {
            "message": "Missing item type\nGet / Set Properties",
            "line": " lib/abstract.js:763"
        },
        {
            "message": "Missing item type\n-\n\n-",
            "line": " lib/other.js:1"
        },
        {
            "message": "Missing item type\nInstantiate Children.",
            "line": " lib/other.js:11"
        },
        {
            "message": "Missing item type\nStart Context in another Worker",
            "line": " lib/other.js:61"
        },
        {
            "message": "Missing item type\nGenerate Standalone JavaScript for browser integration\n\nThe result is not cached and is expected that the rendering engine does the caching.",
            "line": " lib/other.js:72"
        },
        {
            "message": "Missing item type\nAllow Prototype useage method to be ran in custom context for static calls",
            "line": " lib/other.js:92"
        },
        {
            "message": "Missing item type\n-\n\n-",
            "line": " lib/polyfills.js:1"
        },
        {
            "message": "Missing item type\nAdd Object.setPrototypeOf()",
            "line": " lib/polyfills.js:10"
        },
        {
            "message": "Missing item type\nNot a function, that's for sure.\nThis method does not accept any arguments.",
            "line": " lib/utility.js:203"
        },
        {
            "message": "Missing item type\nCreates a continuation function with some arguments already applied.",
            "line": " lib/utility.js:215"
        },
        {
            "message": "Missing item type\nConfigure Defaults for an Object",
            "line": " lib/utility.js:226"
        },
        {
            "message": "Missing item type\nGet property value using a dot notation path.",
            "line": " lib/utility.js:333"
        },
        {
            "message": "Missing item type\nUnwrap dot notation string to nested Object",
            "line": " lib/utility.js:365"
        },
        {
            "message": "Missing item type\nMixin current prototype into target object\n\nHonors property descriptor settings, if available.",
            "line": " lib/utility.js:412"
        },
        {
            "message": "Missing item type\nCarefully Inherit Properties",
            "line": " lib/utility.js:445"
        },
        {
            "message": "Missing item type\nFlatten Array",
            "line": " lib/utility.js:468"
        },
        {
            "message": "Missing item type\nInherit the prototype methods from one constructor into another.\n\nCopy of the Node.js util.inherits method.",
            "line": " lib/utility.js:515"
        },
        {
            "message": "Missing item type\nWalk up the prototype chain, creating a JSON-Schema-esque structure",
            "line": " lib/utility.js:542"
        },
        {
            "message": "Missing item type\nReturn unique values of an array",
            "line": " lib/utility.js:598"
        },
        {
            "message": "Missing item type\nGenerate a unique hash for an Object, using md5 on default.",
            "line": " lib/utility.js:616"
        },
        {
            "message": "Missing item type\nOutput variables to console log.\n\nSettings can be configured like so:\n   abstract.log.config.depth = 2;\n   abstract.log.config.colors = true;",
            "line": " lib/utility.js:678"
        }
    ]
}