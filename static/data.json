{
    "project": {
        "name": "Abstract",
        "description": "Abstract JavaScript Object generation.",
        "version": "0.0.1",
        "url": "https://github.com/usabilitydynamics/abstract/",
        "logo": "http://a3d72a45d111006ec192-ec5b80a12b0b09b4d52373336afb4254.r80.cf1.rackcdn.com/usability-dynamics.png"
    },
    "files": {
        "lib/abstract.js": {
            "name": "lib/abstract.js",
            "modules": {},
            "classes": {
                "Abstract": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/polyfills.js": {
            "name": "lib/polyfills.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/utility.js": {
            "name": "lib/utility.js",
            "modules": {},
            "classes": {},
            "fors": {
                "ObjectExtender": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Abstract": {
            "name": "Abstract",
            "shortname": "Abstract",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/abstract.js",
            "line": 1,
            "description": "Create custom objects and methods by aggregating and abstracting esources.",
            "version": "0.0.1",
            "constractor": ""
        },
        "ObjectExtender": {
            "name": "ObjectExtender",
            "shortname": "ObjectExtender",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        }
    },
    "classitems": [
        {
            "file": "lib/abstract.js",
            "line": 38,
            "description": "Prototypal Properties",
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 66,
            "description": "Instantiate Children.",
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 92,
            "description": "Constructor Properties",
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 98,
            "description": "Creates a new object with the specified prototype object and properties.\nCopy the functions from the superclass prototype to the subclass prototype.",
            "params": [
                {
                    "name": "proto",
                    "description": "Superclass to use as prototype for new object.",
                    "type": "Object|null"
                }
            ],
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 120,
            "description": "Configure multiple object properties.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "props",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 136,
            "description": "Configure single object property.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "prop",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 197,
            "description": "Inserts an object/prototype into a target object.",
            "params": [
                {
                    "name": "target",
                    "description": ""
                },
                {
                    "name": "proto",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 230,
            "description": "Planned.",
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 240,
            "description": "Planned.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "proto",
                    "description": ""
                }
            ],
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 254,
            "description": "Planned.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "proto",
                    "description": ""
                }
            ],
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 266,
            "description": "Basic Wrapper - will be more fault-tolerant in future.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "proto",
                    "description": ""
                }
            ],
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 294,
            "description": "Define Logger",
            "class": "Abstract"
        },
        {
            "file": "lib/abstract.js",
            "line": 309,
            "description": "Generate Standalone JavaScript for browser integration\n\nThe result is not cached and is expected that the rendering engine does the caching.",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Abstract"
        },
        {
            "file": "lib/polyfills.js",
            "line": 1,
            "description": "-\n\n-",
            "author": "potanin",
            "date": "7/5/13",
            "class": "ObjectExtender"
        },
        {
            "file": "lib/polyfills.js",
            "line": 10,
            "description": "Initialize Missing Polyfills",
            "class": "ObjectExtender"
        },
        {
            "file": "lib/polyfills.js",
            "line": 21,
            "description": "Add Object.setPrototypeOf()",
            "source": ": https://gist.github.com/WebReflection/5593554#file-object-setprototypeof-js",
            "params": [
                {
                    "name": "Object",
                    "description": ""
                },
                {
                    "name": "magic",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 1,
            "description": "Helper Utility for Abstract",
            "author": "potanin@UD",
            "date": "6/17/13",
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 9,
            "description": "Not a function, that's for sure.\nThis method does not accept any arguments.",
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 19,
            "description": "Creates a continuation function with some arguments already applied.",
            "uses": [
                "async"
            ],
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 30,
            "description": "Configure Defaults for an Object",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 54,
            "description": "Watch a Single Property",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Callback"
                }
            ],
            "itemtype": "method",
            "name": "watch",
            "chainable": 1,
            "return": {
                "description": "newval",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 95,
            "description": "Unwatch a Single Property",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "unwatch",
            "return": {
                "description": "null"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 124,
            "description": "Deep Merge Another Object into Current\n\nCan do it in two ways:\n- with help of _.extend(). if exists\n- or this.deepExtend, otherwise.",
            "params": [
                {
                    "name": "arguments",
                    "description": "",
                    "type": "Object",
                    "multiple": true
                }
            ],
            "itemtype": "method",
            "name": "extend",
            "uses": [
                "_.extend()",
                "Object.deepExtend()"
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 163,
            "description": "Get property value using a dot notation path.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "str",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 195,
            "description": "Unwrap dot notation string to nested Object",
            "params": [
                {
                    "name": "string",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "hash",
                    "description": ""
                },
                {
                    "name": "seperator",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 231,
            "description": "Carefully Inherit Properties",
            "params": [
                {
                    "name": "target",
                    "description": "Object to add properties to.",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "Source object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Extended target.",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 254,
            "description": "Flatten Array",
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 281,
            "description": "Inherit the prototype methods from one constructor into another.\n\nCopy of the Node.js util.inherits method.",
            "params": [
                {
                    "name": "target",
                    "description": "Constructor function which needs to inherit the prototype.",
                    "type": "Function"
                },
                {
                    "name": "constructor",
                    "description": "Constructor function to inherit prototype from.",
                    "type": "Function"
                }
            ],
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 308,
            "description": "Walk up the prototype chain, creating a JSON-Schema-esque structure",
            "params": [
                {
                    "name": "context",
                    "description": "The object to walk through.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "JSON Schema-esque constructor chain.",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 360,
            "description": "Prety Print complex objects",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "depth",
                    "description": ""
                }
            ],
            "requires": [
                "lodash"
            ],
            "itemtype": "method",
            "name": "console_json",
            "return": {
                "description": "The first argument.",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 394,
            "description": "Pretty Print and Object's Methods",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "object",
                    "description": ""
                }
            ],
            "requires": [
                "lodash"
            ],
            "itemtype": "method",
            "name": "console_methods",
            "return": {
                "description": "The first argument.",
                "type": "Object"
            },
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 425,
            "description": "Generate a unique hash for an Object, using md5 on default.",
            "example": [
                "\n\n   var _hash = Utility.generate_hash({ type: 'some_object', name: 'Bob'});\n\n   console.log( _hash ); // -> 147ce3e2ccb7db6b928b303ce42bdafa"
            ],
            "params": [
                {
                    "name": "obj",
                    "description": "Object to generate a hash for.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "options for hash generation.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "options.type Type of hash to generate, defaulting to md5.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "options.silent_fail Do not throw errors, return empty string if there was an error when true.",
                    "type": "String"
                }
            ],
            "class": "ObjectExtender"
        },
        {
            "file": "lib/utility.js",
            "line": 478,
            "description": "Output variables to console log.\n\nSettings can be configured like so:\n   abstract.log.config.depth = 2;\n   abstract.log.config.colors = true;",
            "params": [
                {
                    "name": "data",
                    "description": "A config object",
                    "type": "Object|String"
                }
            ],
            "example": [
                "\n     Abstract.log( data )\n\nmethod log"
            ],
            "return": {
                "description": "Abstract constructor.",
                "type": "Object"
            },
            "chainable": 1,
            "class": "ObjectExtender"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " lib/abstract.js:1"
        },
        {
            "message": "unknown tag: constractor",
            "line": " lib/abstract.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:197"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/abstract.js:309"
        },
        {
            "message": "unknown tag: date",
            "line": " lib/polyfills.js:1"
        },
        {
            "message": "unknown tag: source",
            "line": " lib/polyfills.js:21"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/polyfills.js:21"
        },
        {
            "message": "unknown tag: date",
            "line": " lib/utility.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/utility.js:231"
        },
        {
            "message": "Missing item type\nPrototypal Properties",
            "line": " lib/abstract.js:38"
        },
        {
            "message": "Missing item type\nInstantiate Children.",
            "line": " lib/abstract.js:66"
        },
        {
            "message": "Missing item type\nConstructor Properties",
            "line": " lib/abstract.js:92"
        },
        {
            "message": "Missing item type\nCreates a new object with the specified prototype object and properties.\nCopy the functions from the superclass prototype to the subclass prototype.",
            "line": " lib/abstract.js:98"
        },
        {
            "message": "Missing item type\nConfigure multiple object properties.",
            "line": " lib/abstract.js:120"
        },
        {
            "message": "Missing item type\nConfigure single object property.",
            "line": " lib/abstract.js:136"
        },
        {
            "message": "Missing item type\nInserts an object/prototype into a target object.",
            "line": " lib/abstract.js:197"
        },
        {
            "message": "Missing item type\nPlanned.",
            "line": " lib/abstract.js:230"
        },
        {
            "message": "Missing item type\nPlanned.",
            "line": " lib/abstract.js:240"
        },
        {
            "message": "Missing item type\nPlanned.",
            "line": " lib/abstract.js:254"
        },
        {
            "message": "Missing item type\nBasic Wrapper - will be more fault-tolerant in future.",
            "line": " lib/abstract.js:266"
        },
        {
            "message": "Missing item type\nDefine Logger",
            "line": " lib/abstract.js:294"
        },
        {
            "message": "Missing item type\nGenerate Standalone JavaScript for browser integration\n\nThe result is not cached and is expected that the rendering engine does the caching.",
            "line": " lib/abstract.js:309"
        },
        {
            "message": "Missing item type\n-\n\n-",
            "line": " lib/polyfills.js:1"
        },
        {
            "message": "Missing item type\nInitialize Missing Polyfills",
            "line": " lib/polyfills.js:10"
        },
        {
            "message": "Missing item type\nAdd Object.setPrototypeOf()",
            "line": " lib/polyfills.js:21"
        },
        {
            "message": "Missing item type\nHelper Utility for Abstract",
            "line": " lib/utility.js:1"
        },
        {
            "message": "Missing item type\nNot a function, that's for sure.\nThis method does not accept any arguments.",
            "line": " lib/utility.js:9"
        },
        {
            "message": "Missing item type\nCreates a continuation function with some arguments already applied.",
            "line": " lib/utility.js:19"
        },
        {
            "message": "Missing item type\nConfigure Defaults for an Object",
            "line": " lib/utility.js:30"
        },
        {
            "message": "Missing item type\nGet property value using a dot notation path.",
            "line": " lib/utility.js:163"
        },
        {
            "message": "Missing item type\nUnwrap dot notation string to nested Object",
            "line": " lib/utility.js:195"
        },
        {
            "message": "Missing item type\nCarefully Inherit Properties",
            "line": " lib/utility.js:231"
        },
        {
            "message": "Missing item type\nFlatten Array",
            "line": " lib/utility.js:254"
        },
        {
            "message": "Missing item type\nInherit the prototype methods from one constructor into another.\n\nCopy of the Node.js util.inherits method.",
            "line": " lib/utility.js:281"
        },
        {
            "message": "Missing item type\nWalk up the prototype chain, creating a JSON-Schema-esque structure",
            "line": " lib/utility.js:308"
        },
        {
            "message": "Missing item type\nGenerate a unique hash for an Object, using md5 on default.",
            "line": " lib/utility.js:425"
        },
        {
            "message": "Missing item type\nOutput variables to console log.\n\nSettings can be configured like so:\n   abstract.log.config.depth = 2;\n   abstract.log.config.colors = true;",
            "line": " lib/utility.js:478"
        }
    ]
}